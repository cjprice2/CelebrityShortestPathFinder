services:
  postgres:
    image: postgres:15
    container_name: celebrity_postgres
    command: ["postgres", "-c", "max_wal_size=4GB"]
    environment:
      POSTGRES_DB: celebrity_graph
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 20s
      retries: 10

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - JAVA_OPTS=-Xmx2g -Xms512m
      - TMDB_API_KEY=${TMDB_API_KEY}
      - SPRING_PROFILES_ACTIVE=database
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/celebrity_graph
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - GRAPH_RESOURCE_DIR=/app/src/main/resources
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
