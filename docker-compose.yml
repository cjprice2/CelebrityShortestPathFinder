services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - sqlite_data:/app/data
      - ./backend/src/main/resources:/app/src/main/resources:ro
    environment:
      - JAVA_OPTS=-Xmx2g -Xms512m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseStringDeduplication -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/app/heap.hprof
      - TMDB_API_KEY=${TMDB_API_KEY}
      - GRAPH_RESOURCE_DIR=/app/src/main/resources
      - SPRING_PROFILES_ACTIVE=database
      - SPRING_DATASOURCE_URL=jdbc:sqlite:/app/data/celebrity_graph.db
      - BFS_MAX_VISITED=3000000
      - BFS_MAX_QUEUE=1000000
      - SKIP_DATA_LOADING=false
      - SKIP_INDEX_ENSURE=false
      - DATABASE_DOWNLOAD_URL=https://github.com/YOUR_USERNAME/CelebrityShortestPathFinder/releases/download/v1.0.0/celebrity_graph.db.gz
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 9G
        reservations:
          memory: 2G

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: deps
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
      PORT: 3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm ci && npm run dev"
    ports:
      - "3000:3000"
    depends_on:
      - backend
volumes:
  sqlite_data:

