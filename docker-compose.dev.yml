services:
  mysql:
    image: mysql:8.0
    container_name: celebrity_mysql_dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-password}
      MYSQL_DATABASE: celebrity_graph
      MYSQL_USER: ${MYSQL_USER:-celebrity_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      # Mount local .gz files for development
      - ./backend/src/main/resources:/app/src/main/resources:ro
    environment:
      - JAVA_OPTS=-Xmx2g -Xms512m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseStringDeduplication -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/app/heap.hprof
      - TMDB_API_KEY=${TMDB_API_KEY}
      - GRAPH_RESOURCE_DIR=/app/src/main/resources
      - SPRING_PROFILES_ACTIVE=database
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=celebrity_graph
      - DB_USERNAME=${MYSQL_USER:-celebrity_user}
      - DB_PASSWORD=${MYSQL_PASSWORD:-password}
      - BFS_MAX_VISITED=3000000
      - BFS_MAX_QUEUE=1000000
      - SKIP_DATA_LOADING=false
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 9G
        reservations:
          memory: 2G

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: dev
    environment:
      # For development: frontend browser will connect to localhost:8080 (mapped from backend container)
      NEXT_PUBLIC_API_URL: http://localhost:8080
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  mysql_data_dev:
